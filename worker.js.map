{"version":3,"sources":["_worker.js"],"names":[],"mappings":";;AAAA,IAAM,wBAAwB,SAAxB,qBAAwB,CAAU,KAAV,EAAgB;AAC5C,MAAI,QAAQ,KAAR,CADwC;AAE5C,SAAO;AACL,SAAK,aAAU,KAAV,EAAgB;AACnB,aAAO,IAAP,CAAY,KAAZ,EACC,OADD,CACS,UAAS,GAAT,EAAa;AACpB,YAAI,UAAU;AACZ,kBAAQ,YAAR;AACA,gBAAO;AACL,iBAAM,GAAN;AACA,mBAAQ,MAAM,GAAN,CAAR;AACA,iBAAM,KAAN;WAHF;SAFE,CADgB;AASlB,sBAAc,WAAd,CAA0B,OAA1B,EATkB;OAAb,CADT,CADmB;KAAhB;AAeL,SAAK,eAAW;AACd,aAAO,SAAP,CADc;KAAX;AAGL,gBAAY,IAAZ;GAnBF,CAF4C;CAAhB;;AAyB9B,IAAI,gBAAgB,IAAhB;;AAEJ,IAAI,UAAU,EAAV;;AAEJ,QAAQ,OAAR,GAAkB;AAChB,MAAI,YAAS,KAAT,EAAe,MAAf,EAAsB;AACxB,kBAAc,WAAd,CAA0B;AACxB,cAAS,YAAT;AACA,YAAO,CAAC,KAAD,EAAO,OAAO,QAAP,EAAP,CAAP;KAFF,EADwB;GAAtB;;AAOJ,UAAQ,gBAAS,KAAT,EAAe,IAAf,EAAoB;AAC1B,kBAAc,WAAd,CAA0B;AACxB,cAAS,gBAAT;AACA,YAAO,CAAC,KAAD,EAAO,IAAP,CAAP;KAFF,EAD0B;GAApB;CARV;;AAgBA,QAAQ,SAAR,GAAoB,UAAS,YAAT,EAAsB,QAAtB,EAA+B;AACjD,gBAAc,WAAd,CAA0B;AACxB,YAAS,UAAT;AACA,UAAO,CAAC,YAAD,EAAc,SAAS,QAAT,EAAd,CAAP;GAFF,EADiD;CAA/B;;AAOpB,QAAQ,QAAR,GAAmB;AACjB,QAAO,EAAP;CADF;;AAIA,KAAK,gBAAL,CAAsB,SAAtB,EAAiC,UAAS,CAAT,EAAY;;AAE3C,MAAI,SAAS,EAAE,IAAF,CAAO,MAAP,CAF8B;AAG3C,MAAI,OAAO,EAAE,IAAF,CAAO,IAAP,CAHgC;;AAO3C,UAAO,MAAP;AACE,SAAK,QAAL;AACE,aAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAS,KAAT,EAAe;AACvC,YAAG;AACD,kBAAQ,KAAR,IAAiB,IAAI,QAAJ,CAAc,aAAW,KAAK,KAAL,CAAX,GAAuB,mBAAvB,CAA/B,CADC;SAAH,CAEC,OAAM,CAAN,EAAQ;AACP,kBAAQ,KAAR,IAAiB,KAAK,KAAL,CAAjB,CADO;SAAR;OAHuB,CAA1B,CADF;AAQA,YARA;AADF,SAUO,MAAL;AACE,oBAAc,WAAd,CAA0B,EAAC,QAAS,MAAT,EAA3B,EADF;AAEA,YAFA;AAVF,SAaO,aAAL;;AAEE,aAAO,cAAP,CAAsB,QAAQ,QAAR,CAAiB,IAAjB,EAAuB,IAA7C,EAAmD,sBAAsB,IAAtB,CAAnD,EAFF;;AAIA,YAJA;AAbF,SAkBO,qBAAL;;AAEE,UAAI,YAAY,IAAI,QAAJ,CAAa,OAAb,EAAqB,aAAW,IAAX,GAAgB,qBAAhB,CAArB,CAA4D,IAA5D,CAAiE,OAAjE,CAAZ,CAFN;AAGE,gBAAU,EAAE,IAAF,CAAO,KAAP,CAAV,CAHF;;AAKA,YALA;AAlBF,SAwBO,SAAL;AACE,cAAQ,IAAR,IADF;AAEA,YAFA;AAxBF,GAP2C;CAAZ,EAqC/B,KArCF","file":"worker.js","sourcesContent":["const createGetterAndSetter = function (field){\n  var field = field\n  return {\n    set: function (value){\n      Object.keys(value)\n      .forEach(function(key){\n        var message = {\n          action: 'setRefProp',\n          data : {\n            key : key,\n            value : value[key],\n            ref : field\n          }\n        }\n          WorkerContext.postMessage(message)\n      })\n\n    },\n    get: function (){\n      return 'caraiba'\n    },\n    enumerable: true\n  }\n}\n\nvar WorkerContext = self;\n\nvar methods = {};\n\nmethods.sandbox = {\n  on: function(label,action){\n    WorkerContext.postMessage({\n      action : 'sandbox:on',\n      data : [label,action.toString()]\n    })\n  },\n\n  notify: function(label,data){\n    WorkerContext.postMessage({\n      action : 'sandbox:notify',\n      data : [label,data]\n    })\n  }\n}\n\nmethods.templates = function(templateName,callback){\n  WorkerContext.postMessage({\n    action : 'template',\n    data : [templateName,callback.toString()]\n  })\n}\n\nmethods.template = {\n  refs : {}\n};\n\nself.addEventListener('message', function(e) {\n\n  var action = e.data.action;\n  var data = e.data.data;\n\n\n\n  switch(action){\n    case 'define':\n      Object.keys(data).forEach(function(index){\n        try{\n          methods[index] = new Function(('return ('+data[index]+').bind(methods)()'))\n        }catch(e){\n          methods[index] = data[index];\n        }\n      })\n    break;\n    case 'ping':\n      WorkerContext.postMessage({action : 'pong'})\n    break;\n    case 'registerRef':\n\n      Object.defineProperty(methods.template.refs, data, createGetterAndSetter(data))\n\n    break;\n    case 'contextualExecution':\n\n      var operation = new Function('event','return ('+data+'.bind(this))(event)').bind(methods)\n      operation(e.data.event)\n\n    break;\n    case 'execute':\n      methods[data]()\n    break;\n  }\n\n\n},false);\n"]}